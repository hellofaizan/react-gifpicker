import React from "react";
import { StaggeredAlignment, StaggeredGridController, StaggeredGridProps, StaggeredItemSpan } from "./StaggeredGridModel";
interface StaggeredGridState {
    calculatedGridHeight: number | undefined;
}
interface GridItemData {
    itemHeight: number;
    itemColumnSpan: StaggeredItemSpan | number;
    mounted: boolean;
    update: (width: number, x: number, y: number) => void;
}
export declare class StaggeredGrid<ItemType> extends React.Component<StaggeredGridProps & typeof StaggeredGrid.defaultProps, StaggeredGridState> {
    static defaultProps: {
        elementType: string;
        alignment: StaggeredAlignment;
        calculateHeight: boolean;
        useElementWidth: boolean;
        horizontalGap: number;
        verticalGap: number;
        repositionOnResize: boolean;
        fitHorizontalGap: boolean;
        requestAppendScrollTolerance: number;
    };
    repositionedOnce: boolean;
    gridWidth: number | undefined;
    gridItems: Array<GridItemData>;
    requestRepositioningId: number | undefined;
    state: {
        calculatedGridHeight: undefined;
    };
    gridElementRef: HTMLElement | null;
    constructor(props: Readonly<StaggeredGridProps & typeof StaggeredGrid.defaultProps> | (StaggeredGridProps & typeof StaggeredGrid.defaultProps));
    registerController(controller: StaggeredGridController): void;
    getGridWidth(): number;
    getDefinedColsCount(): number | undefined;
    getDefinedColumnWidth(gridWidth: number): number;
    getColumnWidth(gridWidth: number, columnCount: number, horizontalGap: number): number;
    getColsCount(gridWidth: number): number;
    reposition: () => void;
    requestReposition: () => void;
    onResize: () => void;
    onScroll: () => void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prevProps: Readonly<StaggeredGridProps & typeof StaggeredGrid.defaultProps>, prevState: Readonly<StaggeredGridState>, snapshot?: any): void;
    updateItem(index: number, itemColumnSpan: StaggeredItemSpan | number, height: number, update: (width: number, x: number, y: number) => void): void;
    removeItem(index: number): void;
    elementProps(): any;
    render(): JSX.Element;
}
/**
 * This gives back a controller object , it should be given to the
 * StaggeredGrid Component using 'gridController' Prop, the component will register with this controller,
 * then you can use controller to call functions on the grid !
 */
export declare function createStaggeredGridController(): StaggeredGridController;
export {};
